##################################################
# file: Test_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /usr/bin/wsdl2py ./wsdl/binding.wsdl
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from Test_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
class EchoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        Message -- part Message
        """
        self._Message =  kw.get("Message")
EchoRequest.typecode = Struct(pname=("urn:Test","echo"), ofwhat=[ZSI.TC.String(pname="Message", aname="_Message", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=EchoRequest, encoded="urn:Test")

class EchoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        Message -- part Message
        """
        self._Message =  kw.get("Message")
EchoResponse.typecode = Struct(pname=("urn:Test","echoResponse"), ofwhat=[ZSI.TC.String(pname="Message", aname="_Message", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=EchoResponse, encoded="urn:Test")

class AddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
AddRequest.typecode = Struct(pname=("urn:Test","add"), ofwhat=[ZSI.TCnumbers.Iinteger(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=AddRequest, encoded="urn:Test")

class AddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        one -- part one
        two -- part two
        """
        self._one =  kw.get("one")
        self._two =  kw.get("two")
AddResponse.typecode = Struct(pname=("urn:Test","addResponse"), ofwhat=[ZSI.TCnumbers.Iinteger(pname="one", aname="_one", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iinteger(pname="two", aname="_two", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=AddResponse, encoded="urn:Test")


# Service Skeletons
class TestService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/test.py', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_echo(self, ps, **kw):
        request = ps.Parse(EchoRequest.typecode)
        return request,EchoResponse()

    soapAction['urn:Test#echo'] = 'soap_echo'
    root[(EchoRequest.typecode.nspname,EchoRequest.typecode.pname)] = 'soap_echo'

    def soap_add(self, ps, **kw):
        request = ps.Parse(AddRequest.typecode)
        return request,AddResponse()

    soapAction['urn:Test#add'] = 'soap_add'
    root[(AddRequest.typecode.nspname,AddRequest.typecode.pname)] = 'soap_add'

